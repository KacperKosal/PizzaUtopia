@page "/cart"
@using System.Text.Json
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<link href="https://fonts.googleapis.com/css?family=Jua" rel="stylesheet">
<link rel="stylesheet" href="Profile.css">

<div class="header">
    <img src="Images/logopizzy.png" alt="Pizza Icon" />
    <h1>Mój koszyk</h1>
</div>

<div class="cart-container">
    @if (CartItems.Count == 0)
    {
        <p>Twój koszyk jest pusty.</p>
    }
    else
    {
        @foreach (var item in CartItems)
        {
            <div class="cart-item">
                <img src="@item.ImageUrl" alt="@item.Name" />
                <div class="cart-item-content">
                    <div class="cart-item-title">@item.Name</div>
                    <div class="cart-item-quantity">
                        Ilość: @item.Quantity
                        <button @onclick="() => ChangeQuantity(item, 1)">+</button>
                        <button @onclick="() => ChangeQuantity(item, -1)">-</button>
                    </div>
                    <button @onclick="() => RemoveItem(item)">Usuń</button>
                </div>
            </div>
        }
    }
</div>

<button class="checkout-button" @onclick="OnCheckoutClick">Dokończ zamówienie</button>

<div class="bottom-nav">
    <button class="nav-button" @onclick="OnMenuClick">
        <img src="Images/home-icon.png" alt="Home" />
    </button>
    <button class="nav-button" @onclick="OnCartClick">
        <img src="Images/cart-icon.png" alt="Cart" />
    </button>
    <button class="nav-button" @onclick="OnProfileClick">
        <img src="Images/profile-icon.png" alt="Profile" />
    </button>
</div>

@code {
    private List<CartItem> CartItems = new()
    {
        new CartItem { Name = "Pepperoni pizza", ImageUrl = "Images/pepperoni.png", Quantity = 2 },
        new CartItem { Name = "Margarita", ImageUrl = "Images/margherita.png", Quantity = 1 }
    };

    protected override async Task OnInitializedAsync()
    {
        // Odczytaj stan koszyka z Local Storage
        var savedCart = await LocalStorage.GetItemAsync<List<CartItem>>("CartItems");
        if (savedCart != null)
        {
            CartItems = savedCart;
        }
    }

    private async Task SaveCartState()
    {
        // Zapisz stan koszyka do Local Storage
        await LocalStorage.SetItemAsync("CartItems", CartItems);
    }

    private void OnMenuClick() => NavigationManager.NavigateTo("/menu");

    private void OnCartClick() => NavigationManager.NavigateTo("/cart");

    private void OnProfileClick() => NavigationManager.NavigateTo("/profile");

    private void OnCheckoutClick() => NavigationManager.NavigateTo("/checkout");

    private async Task ChangeQuantity(CartItem item, int change)
    {
        item.Quantity += change;

        if (item.Quantity <= 0)
        {
            CartItems.Remove(item);
        }

        // Zapisz zmiany do Local Storage
        await SaveCartState();
    }

    private async Task RemoveItem(CartItem item)
    {
        CartItems.Remove(item);

        // Zapisz zmiany do Local Storage
        await SaveCartState();
    }

    private class CartItem
    {
        public string Name { get; set; } = string.Empty;
        public string ImageUrl { get; set; } = string.Empty;
        public int Quantity { get; set; }
    }
}
