@page "/editprofile"

@using Blazored.LocalStorage
@using Microsoft.Maui.ApplicationModel
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<link href="https://fonts.googleapis.com/css?family=Jua" rel="stylesheet">
<link rel="stylesheet" href="Profile.css">

<div class="edit-profile-container">
    <!-- Górna sekcja z tytułem i przyciskiem powrotu -->
    <div class="header">
        <button class="back-button" @onclick="NavigateBack">
            <img src="Images/back-arrow.png" alt="Powrót" />
        </button>
        <h1 class="title">Edycja profilu</h1>
    </div>

    <!-- Zdjęcie profilowe -->
    <div class="profile-picture-container">
        <img src="@ProfilePicture" alt="Zdjęcie profilowe" class="profile-picture" />
        <button class="edit-picture-button" @onclick="TakePhoto">
            <img src="Images/edit-icon.png" alt="Edytuj zdjęcie" />
        </button>
    </div>

    <!-- Formularz edycji profilu -->
    <div class="form-container">
        <label for="name" class="input-label">Imię i nazwisko</label>
        <input type="text" id="name" class="input-field" @bind="UserName" />

        <label for="phone" class="input-label">Numer telefonu</label>
        <input type="text" id="phone" class="input-field" @bind="PhoneNumber" />
    </div>

    <!-- Przycisk zapisu -->
    <div class="save-button-container">
        <button class="save-button" @onclick="SaveChanges">Zapisz zmiany</button>
    </div>

    <!-- Dolny pasek nawigacyjny -->
    <div class="bottom-nav">
        <button class="nav-button" @onclick="OnMenuClick">
            <img src="Images/home-icon.png" alt="Home" />
        </button>
        <button class="nav-button" @onclick="OnCartClick">
            <img src="Images/cart-icon.png" alt="Cart" />
        </button>
        <button class="nav-button" @onclick="OnProfileClick">
            <img src="Images/profile-icon.png" alt="Profile" />
        </button>
    </div>
</div>

@code {
    private string UserName { get; set; } = "Andrzej Kucyk";
    private string PhoneNumber { get; set; } = "+48 123456789";
    private string ProfilePicture { get; set; } = "Images/profile-icon.png";

    /// <summary>
    /// Metoda inicjalizująca dane użytkownika z pamięci lokalnej.
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        UserName = await LocalStorage.GetItemAsync<string>("UserName") ?? "Andrzej Kucyk";
        PhoneNumber = await LocalStorage.GetItemAsync<string>("PhoneNumber") ?? "+48 123456789";
        ProfilePicture = await LocalStorage.GetItemAsync<string>("ProfilePicture") ?? "Images/profile-icon.png";
    }

    /// <summary>
    /// Zapisuje zmienione dane użytkownika do pamięci lokalnej.
    /// </summary>
    private async Task SaveChanges()
    {
        await LocalStorage.SetItemAsync("UserName", UserName);
        await LocalStorage.SetItemAsync("PhoneNumber", PhoneNumber);
        await LocalStorage.SetItemAsync("ProfilePicture", ProfilePicture);
        Console.WriteLine("Zmiany zostały zapisane.");
    }

    /// <summary>
    /// Nawiguje z powrotem do strony profilu.
    /// </summary>
    private void NavigateBack()
    {
        NavigationManager.NavigateTo("/profile");
    }

    /// <summary>
    /// Nawiguje do strony menu.
    /// </summary>
    private void OnMenuClick()
    {
        NavigationManager.NavigateTo("/menu");
    }

    /// <summary>
    /// Nawiguje do strony koszyka.
    /// </summary>
    private void OnCartClick()
    {
        NavigationManager.NavigateTo("/cart");
    }

    /// <summary>
    /// Nawiguje do strony profilu.
    /// </summary>
    private void OnProfileClick()
    {
        NavigationManager.NavigateTo("/profile");
    }

    /// <summary>
    /// Wykonuje zdjęcie profilowe za pomocą aparatu urządzenia.
    /// </summary>
    private async Task TakePhoto()
    {
        try
        {
            var photo = await MediaPicker.CapturePhotoAsync();
            if (photo != null)
            {
                var stream = await photo.OpenReadAsync();
                ProfilePicture = await SavePhotoAsync(stream);
                await SaveChanges(); // Zapisz zmiany po wykonaniu zdjęcia.
                StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Błąd: {ex.Message}");
        }
    }

    /// <summary>
    /// Zapisuje wykonane zdjęcie w pamięci lokalnej.
    /// </summary>
    private async Task<string> SavePhotoAsync(Stream stream)
    {
        var filePath = Path.Combine(FileSystem.AppDataDirectory, "profile.jpg");
        using (var fileStream = new FileStream(filePath, FileMode.Create, FileAccess.Write))
        {
            await stream.CopyToAsync(fileStream);
        }
        return filePath;
    }
}
